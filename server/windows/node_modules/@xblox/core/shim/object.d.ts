/**
 * Determines whether two values are the same value.
 *
 * @param value1 The first value to compare
 * @param value2 The second value to compare
 * @return true if the values are the same; false otherwise
 */
export declare const is: (value1: any, value2: any) => boolean;
/**
 * Returns an array of own properties who key is a symbol
 *
 * @param o The object to return the properties for
 */
export declare const getOwnPropertySymbols: (o: any) => symbol[];
/**
 * Returns an array of own properties who key is a string
 *
 * @param o The object to return the properties for
 */
export declare const getOwnPropertyNames: (o: any) => string[];
/**
 * Returns the names of the enumerable properties and methods of an object.
 * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
 */
export declare const keys: (o: any) => string[];
/**
 * Returns the values of the enumerable properties and methods of an object.
 * @param o Object that contains the properties and methods.
 */
export declare const values: (o: any) => any[];
/**
 * Returns the keys and values of the enumerable properties and methods of an object. Each entry will be returned as an
 * array holding the [key, value].
 * @param o Object that contains the properties and methods.
 */
export declare const entries: (o: any) => any[];
export declare const getOwnPropertyDescriptor: (o: any, property: string | symbol) => PropertyDescriptor | undefined;
export declare const getOwnPropertyDescriptors: (o: any) => any;
