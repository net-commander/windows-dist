'use strict';

var promisify = require('es6-promisify');
var currify = require('currify/legacy');

module.exports = function (fn, ctx) {
    check(fn);
    checkCount(fn.length);
    
    var f = [
        function (a) { return promisify(fn, ctx)(a); },
        function (a, b) { return promisify(fn, ctx)(a, b); },
        function (a, b, c) { return promisify(fn, ctx)(a, b, c); } ];
    
    var count = fn.length - 2;
    return currify(f[count]);
};

function check(fn) {
    if (typeof fn !== 'function')
        { throw Error('fn should be a function!'); }
}

function checkCount(count) {
    if (count > 4)
        { throw Error('fn takes to much arguments, up to 4 supported'); }
}

