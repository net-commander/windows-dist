{"version":3,"sources":["../libs/cli.js"],"names":[],"mappings":"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","file":"libs/cli.js","sourcesContent":["import path from 'path'\nimport keypress from 'keypress'\nimport Player from '../dist/player'\n\nexport default function() {\n  var command = process.argv[2]\n  if (!command)\n    return\n\n  var songs = process.argv.splice(3)\n  if (!songs || songs.length === 0)\n    return\n\n  var player = new Player(format(songs))\n\n  try {\n    player[command]()\n  } catch (err) {\n    console.log(err)\n  }\n\n  function format(songs) {\n    return songs.map((songPath) => {\n      if (isAbs(songPath))\n        return songPath\n\n      return path.join(process.cwd(), songPath)\n    })\n  }\n\n  function isAbs(str) {\n    if (str.indexOf('http') === 0 || str.indexOf('https') === 0)\n      return true\n\n    var beginWith = str.charAt(0)\n    if (beginWith === '~' || beginWith == '/')\n      return true\n\n    return false\n  }\n\n  var vol = 1\n\n  function updateVolume() {\n    player.setVolume(vol)\n    console.log('volume: ' + Math.floor(vol * 100))\n  }\n\n  keypress(process.stdin);\n\n  var paused = false\n\n  process.stdin.on('keypress', function (ch, key) {\n    if (key && key.ctrl && key.name == 'c') {\n      process.exit(0)\n    }\n    if (key && key.name == 'space') {\n      player.pause()\n      if(!paused)\n        console.log('paused')\n      else\n        console.log('resuming')\n      paused = !paused\n    }\n    if (key && key.name == 'x') {\n      player.stop()\n      console.log('stopped')\n    }\n    if (key && key.name == 's') {\n      player.play()\n      console.log('playing')\n    }\n    if (key && key.name == 'up') {\n      vol += 0.1;\n      if(vol > 1) {\n          vol = 1\n      }\n      updateVolume()\n    }\n    if (key && key.name == 'down') {\n      vol -= 0.1;\n      if(vol < 0) {\n          vol = 0\n      }\n      updateVolume()\n    }\n  });\n\n  process.stdin.setRawMode(true)\n  process.stdin.resume()\n\n  console.log('press \"x\" to stop, press \"s\" to play, press \"space\" to pause / resume')\n  console.log('press \"Up\" to increase volume, press \"Down\" to decrease volume')\n}\n"]}