{
  "_args": [
    [
      {
        "raw": "vlc-ffi@git+https://github.com/gbaumgart/vlc-ffi.git",
        "scope": null,
        "escapedName": "vlc-ffi",
        "name": "vlc-ffi",
        "rawSpec": "git+https://github.com/gbaumgart/vlc-ffi.git",
        "spec": "git+https://github.com/gbaumgart/vlc-ffi.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:gbaumgart/vlc-ffi.git",
          "sshUrl": "git+ssh://git@github.com/gbaumgart/vlc-ffi.git",
          "httpsUrl": "git+https://github.com/gbaumgart/vlc-ffi.git",
          "gitUrl": "git://github.com/gbaumgart/vlc-ffi.git",
          "shortcut": "github:gbaumgart/vlc-ffi",
          "directUrl": "https://raw.githubusercontent.com/gbaumgart/vlc-ffi/master/package.json"
        }
      },
      "C:\\cf\\server\\windows"
    ]
  ],
  "_from": "git+https://github.com/gbaumgart/vlc-ffi.git",
  "_id": "vlc-ffi@0.1.3",
  "_inCache": true,
  "_location": "/vlc-ffi",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vlc-ffi@git+https://github.com/gbaumgart/vlc-ffi.git",
    "scope": null,
    "escapedName": "vlc-ffi",
    "name": "vlc-ffi",
    "rawSpec": "git+https://github.com/gbaumgart/vlc-ffi.git",
    "spec": "git+https://github.com/gbaumgart/vlc-ffi.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:gbaumgart/vlc-ffi.git",
      "sshUrl": "git+ssh://git@github.com/gbaumgart/vlc-ffi.git",
      "httpsUrl": "git+https://github.com/gbaumgart/vlc-ffi.git",
      "gitUrl": "git://github.com/gbaumgart/vlc-ffi.git",
      "shortcut": "github:gbaumgart/vlc-ffi",
      "directUrl": "https://raw.githubusercontent.com/gbaumgart/vlc-ffi/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/gbaumgart/vlc-ffi.git#7d7f1d0a7cf668a14402389821faa2ac449157a2",
  "_shasum": "4cf0ff16f19ad60955474d89807c5332f769a67f",
  "_shrinkwrap": null,
  "_spec": "vlc-ffi@git+https://github.com/gbaumgart/vlc-ffi.git",
  "_where": "C:\\cf\\server\\windows",
  "author": "",
  "bugs": {
    "url": "http://github.com/xblox/vlc-ffi/issues"
  },
  "dependencies": {
    "ffi": "git+https://github.com/xblox/node-ffi.git",
    "ref": "^1.3.3",
    "ref-struct": "^1.1.0",
    "ref-union": "^1.0.1",
    "semver": "^5.3.0",
    "ytdl-core": "^0.7.22"
  },
  "description": "VLC FFI Bindings",
  "devDependencies": {},
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "7d7f1d0a7cf668a14402389821faa2ac449157a2",
  "homepage": "http://github.com/xblox/vlc-ffi",
  "keywords": [
    "vlc"
  ],
  "main": "vlc.js",
  "name": "vlc-ffi",
  "optionalDependencies": {},
  "readme": "node-vlc\n--------\n\nnode bindings for libvlc using ffi\n\nCurrently this package depends on VLC >= 2.0.1, if you're on Mac OS X or Windows\nit tries to detect the location of your VLC installation and find libvlc under\nthat.\n\nUsage\n-----\n\nThe ffi library can currently only be initialized once per process, so you can't\nuse multiple versions of libvlc in the same process.\n\nThe library tries to deduce the common location libvlc.so, `/usr/lib/libvlc.so`\nor `/Applications/VLC.app/Contents/MacOS/lib/libvlc.dylib` for instance. If\nyour `libvlc` is named or versioned differently set `vlc.LIBRARY_PATHS` to the\nfull path (including filename) of your preferred version.\n\nIf libvlc isn't found after trying all of `vlc.LIBRARY_PATHS` it attempts to\nload from your systems normal library loading parameters (i.e. `/etc/ld.so/conf`)\n\nSearching is in array order, and is synchronous, but only happens on the first\ninitialization i.e. the first time you call `var instance = new vlc('-I', 'dummy');`\nAfter the first successful initialization all dependent modules will use that\nfile for interactions.\n\nFor a quick example see `examples/vlc.js`\n\nThere are some operations that vlc performs that are synchronous. Currently\nthis library makes no attempt to work around such things, so be sure you know\nwhat you're doing.\n\nlibvlc does have an event interface, but it is not as robust as nodes nor does\nit necessarily match the node pattern.\n\nThere is not much documentation at the moment, use the source luke. For that\nmatter, there's not much documentation around libvlc either.\n\nEvents\n------\n\nCurrently you can attach to the following events\n\n * Media -- odd bug, on osx you need to parseSync before attaching any handlers\nelse the process freezes, I haven't investigated fully to understand why yet.\n   * `MetaChanged` - callback receives metadata field name that changed\n   * `SubItemAdded` - callback receives new media item\n   * `DurationChanged` - callback receives the new duration\n   * `ParsedChanged` - callback receives the new parsed state\n   * `Freed` - callback receives media item that was freed (wtf this seems like a bad idea)\n   * `StateChanged` - callback receives the new media state\n * MediaPlayer\n   * `MediaChanged` - no argument\n   * `NothingSpecial` - no argument\n   * `Opening` - no argument\n   * `Buffering` - callback receives percent full of cache\n   * `Playing` - no argument\n   * `Paused` - no argument\n   * `Stopped` - no argument\n   * `Forward` - no argument\n   * `Backward` - no argument\n   * `EndReached` - no argument\n   * `EncounteredError` - no argument\n   * `TimeChanged` - callback receives the new time (constantly update while playing)\n   * `PositionChanged` - callback receives new position (constantly updated while playing)\n   * `SeekableChanged` - callback receives truthy of seekable\n   * `PausableChanged` - callback receives truthy of pausable\n   * `TitleChanged` - callback receives truthy of title changed\n   * `SnapshotTaken` - no argument\n   * `LengthChanged` - no argument\n   * `Vout` - callback receives the new number of vout channels\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/xblox/vlc-ffi.git"
  },
  "version": "0.1.3"
}
