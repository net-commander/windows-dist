// ----------------------------------------------
//  common/non-theme specific less mixins 
// ----------------------------------------------
// * a mixin should depend only to variables 
//   passed as a parameter.
// * DO NOT define tag selectors, CSS classes or
//   variables here. 
// ----------------------------------------------

.user-select (@v) {
	user-select: @v;
	-webkit-user-select: @v;
	-ms-user-select: @v;
	-moz-user-select: @v;
}

.box-shadow (@v) {
	-webkit-box-shadow: @v;
	-moz-box-shadow: @v;
	box-shadow: @v;
}

.box-sizing (@v) {
	-webkit-box-sizing: @v;
	-moz-box-sizing: @v;
	box-sizing: @v;
}

.tap-highlight-color (@v) {
	-webkit-tap-highlight-color: @v;
}

.text-size-adjust (@v) {
	-webkit-text-size-adjust: @v;
}

.text-ellipsis() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.touch-callout (@v) {
	-webkit-touch-callout: @v;
}

.border-radius (@radius) {
	-moz-border-radius: @radius;
	border-radius: @radius;
}
// ----------------------------------------------
// flex
// ----------------------------------------------
.display-flex () {
	display: -webkit-box;
	display: -moz-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

.flex-direction-column () {
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	-webkit-box-orient: vertical;
	-moz-box-orient: vertical;
	-ms-box-orient: vertical;
	flex-direction: column;
}

.flex (@v) {
	-webkit-box-flex: @v;
	-moz-box-flex: @v;
	-webkit-flex: @v;
	-ms-flex: @v;
	flex: @v;
}
// ----------------------------------------------
// transitions
// ----------------------------------------------

.transition (@value) {
	-webkit-transition: @value;
	transition: @value;
}

.transition-transform (@value1, @value2) {
	-webkit-transition: -webkit-transform @value1 @value2;
	transition: transform @value1 @value2;
}

.transition-property (@value) {
	-webkit-transition-property: @value;
	-moz-transition-property: @value;
	transition-property: @value;
}

.transition-property (@value1, @value2) {
	-webkit-transition-property: @value1, @value2;
	-moz-transition-property: @value1, @value2;
	transition-property: @value1, @value2;
}

.transition-property-transform () {
	-webkit-transition-property: -webkit-transform;
	transition-property: transform;
}

.transition-delay (@v) {
	-webkit-transition-delay: @v;
	transition-delay: @v;
}

.transition-duration (@value) {
	-webkit-transition-duration: @value;
	-moz-transition-duration: @value;
	transition-duration: @value;
}


.transition-timing-function (@value) {
	-webkit-transition-timing-function: @value;
	-moz-transition-timing-function: @value;
	transition-timing-function: @value;
}

// ----------------------------------------------
// animations
// ----------------------------------------------
.animation-name (@v) {
	-webkit-animation-name: @v;
	animation-name: @v;
}

.animation-duration (@v) {
	-webkit-animation-duration: @v;
	animation-duration: @v;
}

.animation-timing-function (@v) {
	-webkit-animation-timing-function: @v;
	animation-timing-function: @v;
}

.animation-delay (@v) {
	-webkit-delay: @v;
	animation-delay: @v;
}

.animation-iteration-count (@v) {
	-webkit-animation-iteration-count: @v;
	animation-iteration-count: @v;
}

.animation-direction (@v) {
	-webkit-animation-direction: @v;
	animation-direction: @v;
}

// ----------------------------------------------
// transform
// ----------------------------------------------
.transform (@v) {
	-webkit-transform: @v;
	transform: @v;
}

.transform-origin (@v) {
	-webkit-transform-origin: @v;
	transform-origin: @v;
}

.transform-style (@v) {
	-webkit-transform-style: @v;
	// not supported in IE10
}

// ----------------------------------------------
// keyframes transform 0 50 100
// ----------------------------------------------
.keyframes-transform-0-50-100(@t1, @t2, @t3) {
	0% {
		transform: @t1;
	}
	50% {
		transform: @t2;
	}
	100% {
		transform: @t3;
	}
}

.keyframes-transform-0-50-100-webkit(@t1, @t2, @t3) {
	0% {
		-webkit-transform: @t1;
	}
	50% {
		-webkit-transform: @t2;
	}
	100% {
		-webkit-transform: @t3;
	}
}

// ----------------------------------------------
// keyframes transform from to
// ----------------------------------------------
.keyframes-transform-from-to(@t1, @t2) {
	from {
		transform: @t1;
	}
	to {
		transform: @t2;
	}
}

.keyframes-transform-from-to-webkit(@t1, @t2) {
	from {
		-webkit-transform: @t1;
	}
	to {
		-webkit-transform: @t2;
	}
}

// ----------------------------------------------
// keyframes transform opacity from to
// ----------------------------------------------
.keyframes-transform-opacity-from-to(@t1, @o1, @t2, @o2) {
	from {
		transform: @t1;
		opacity: @o1;
	}
	to {
		transform: @t2;
		opacity: @o2;
	}
}

.keyframes-transform-opacity-from-to-webkit(@t1, @o1, @t2, @o2) {
	from {
		-webkit-transform: @t1;
		opacity: @o1;
	}
	to {
		-webkit-transform: @t2;
		opacity: @o2;
	}
}

// ----------------------------------------------
// keyframes z-index transform opacity 0 50 100
// ----------------------------------------------
.keyframes-z-index-transform-opacity-0-50-100(@i1, @t1, @o1, @i2, @t2, @o2, @i3, @t3, @o3) {
	0% {
		z-index: @i1;
		transform: @t1;
		opacity: @o1;
	}
	50% {
		z-index: @i2;
		transform: @t2;
		opacity: @o2;
	}
	100% {
		z-index: @i3;
		transform: @t3;
		opacity: @o3;
	}
}

.keyframes-z-index-transform-opacity-0-50-100-webkit(@i1, @t1, @o1, @i2, @t2, @o2, @i3, @t3, @o3) {
	0% {
		z-index: @i1;
		-webkit-transform: @t1;
		opacity: @o1;
	}
	50% {
		z-index: @i2;
		-webkit-transform: @t2;
		opacity: @o2;
	}
	100% {
		z-index: @i3;
		-webkit-transform: @t3;
		opacity: @o3;
	}
}

// ----------------------------------------------
// keyframes opacity from to
// ----------------------------------------------
.keyframes-opacity-from-to(@o1, @o2) {
	from {
		opacity: @o1;
	}
	to {
		opacity: @o2;
	}
}

// ----------------------------------------------
// Gradients
// ----------------------------------------------
.linear-gradient (@value1, @value2) {
	background-image: -webkit-linear-gradient(@value1, @value2); // Chrome10+, Safari5.1+
	background-image: linear-gradient(@value1, @value2);
}

.alpha-white-gradient (@opacity1, @stop1, @opacity2, @stop2) {
	// summary:
	//		For setting up white background-image with variable transparency.
	// example:
	//		Gradient starts at top (0%) with 30% opacity, and then ends at bottom (100%) with full transparency
	//		|	.alpha-white-gradient(0.3, 0%, 0, 100%)
	//
	.linear-gradient(rgba(255, 255, 255,@opacity1) @stop1, rgba(255, 255, 255,@opacity2) @stop2);
}

.standard-gradient (@pathToRoot: "") {
	// summary:
	//		Light to dark background-image used by widgets with short height (~16px) including:
	//			- MenuBar, and hovered MenuItem/MenuBarItem
	//			- arrow icon wrapper for Select, ComboBox, Spinner
	//			- Toolbar and hovered Toolbar buttons
	//			- TitlePane title bar, AccordionContainer title bar, Dialog title bar

	.alpha-white-gradient(0.7, 0%, 0, 100%);
}

.background-image-linear-gradient-top-bottom (@from, @to) {
	background-image: -webkit-gradient(linear, left top, left bottom, from(@from), to(@to));
	background-image: linear-gradient(to bottom, @from 0%, @to 100%);
}

.background-image-linear-gradient-top-bottom-2-stops (@from, @to, @pos1, @color1, @pos2, @color2) {
	background-image: -webkit-gradient(linear, left top, left bottom, from(@from), to(@to), color-stop(@pos1, @color1), color-stop(@pos2, @color2));
	background-image: linear-gradient(to bottom, @from 0%, @color1 percentage(@pos1), @color2 percentage(@pos2), @to 100%);
}

// EOF