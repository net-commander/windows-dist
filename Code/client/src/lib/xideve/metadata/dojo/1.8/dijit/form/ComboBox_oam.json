{
    "id": "http://dojotoolkit.org/dijit/form/ComboBox",
    "name": "dijit.form.ComboBox",
    "spec": "1.0",
    "version": "1.0",
    "require": [
        {
            "type": "javascript-module",
            "format": "amd",
            "src": "dijit/form/ComboBox",
            "$library": "dojo"
        }
    ],
    "library": {
        "dojo": {
            "src": "../../../dojo/dojo.js"
        }
    },
    "property": {
        "type": {
            "datatype": "string",
            "option": [
                {
                    "value": "text"
                },
                {
                    "value": "password"
                }
            ],
            "defaultValue": "text",
            "title": "Type"
        },
        "name": {
            "datatype": "string",
            "title": "Name"
        },
        "alt": {
            "datatype": "string",
            "hidden": true
        },
        "value": {
            "datatype": "string",
            "title": "Value"
        },
        "tabIndex": {
            "datatype": "string",
            "defaultValue": "0",
            "title": "Tab Index"
        },
        "disabled": {
            "datatype": "boolean",
            "title": "Disabled"
        },
        "readOnly": {
            "datatype": "boolean",
            "title": "Read Only"
        },
        "intermediateChanges": {
            "datatype": "boolean",
            "title": "Intermediate Changes"
        },
        "trim": {
            "datatype": "boolean",
            "hidden": true
        },
        "uppercase": {
            "datatype": "boolean",
            "hidden": true
        },
        "lowercase": {
            "datatype": "boolean",
            "hidden": true
        },
        "propercase": {
            "datatype": "boolean",
            "hidden": true
        },
        "maxLength": {
            "datatype": "string",
            "title": "Max Length"
        },
        "required": {
            "datatype": "boolean",
            "title": "Required",
            "hidden": true
        },
        "promptMessage": {
            "datatype": "string",
            "title": "Prompt Message",
            "hidden": true
        },
        "invalidMessage": {
            "datatype": "string",
            "defaultValue": "The value entered is not valid.",
            "title": "Invalid Message",
            "hidden": true
        },
        "constraints": {
            "datatype": "json",
            "defaultValue": "\"{\\\"locale\\\":\\\"\\\"}\"",
            "title": "Constraints",
            "hidden": true
        },
        "regExp": {
            "datatype": "string",
            "defaultValue": ".*",
            "title": "Regular Expression",
            "hidden": true
        },
        "tooltipPosition": {
            "datatype": "array",
            "defaultValue": "[]",
            "title": "Tooltip Positions",
            "hidden": true
        },
        "pageSize": {
            "datatype": "number",
            "defaultValue": null,
            "title": "Page Size"
        },
        "store": {
            "datatype": "object",
            "hidden": true
        },
        "query": {
            "datatype": "json",
            "defaultValue": "\"{}\"",
            "hidden": true
        },
        "autoComplete": {
            "datatype": "boolean",
            "defaultValue": true,
            "title": "Auto Complete"
        },
        "searchDelay": {
            "datatype": "number",
            "defaultValue": 100,
            "title": "Search Delay",
            "description": "Search delay (ms)"
        },
        "searchAttr": {
            "datatype": "string",
            "defaultValue": "name",
            "title": "Search Attribute"
        },
        "queryExpr": {
            "datatype": "string",
            "defaultValue": "${0}*",
            "title": "Query Expression"
        },
        "ignoreCase": {
            "datatype": "boolean",
            "defaultValue": true,
            "title": "Ignore Case"
        },
        "hasDownArrow": {
            "datatype": "boolean",
            "defaultValue": true,
            "title": "Show Down Arrow"
        },
        "state": {
            "datatype": "string",
            "description": "Shows current state (ie, validation result) of input (Normal, Warning, or Error)",
            "hidden": true
        },
        "scrollOnFocus": {
            "datatype": "boolean",
            "description": "On focus, should this widget scroll into view?",
            "hidden": false,
            "defaultValue": true
        },
        "item": {
            "datatype": "object",
            "description": "This is the item returned by the dojo.data.store implementation that\nprovides the data for this cobobox, it's the currently selected item.",
            "hidden": true
        },
        "fetchProperties": {
            "datatype": "json",
            "description": "Mixin to the dojo.data store's fetch.\nFor example, to set the sort order of the ComboBox menu, pass:\n\t{ sort: {attribute:\"name\",descending: true} }\nTo override the default queryOptions so that deep=false, do:\n\t{ queryOptions: {ignoreCase: true, deep: false} }",
            "hidden": true
        },
        "highlightMatch": {
            "datatype": "string",
            "defaultValue": "first",
            "option": [
                {
                    "value": "first"
                },
                {
                    "value": "all"
                },
                {
                    "value": "none"
                }
            ],
            "description": "One of: \"first\", \"all\" or \"none\".\n\nIf the ComboBox/FilteringSelect opens with the search results and the searched\nstring can be found, it will be highlighted.  If set to \"all\"\nthen will probably want to change queryExpr parameter to '*${0}*'\n\nHighlighting is only performed when labelType is \"text\", so as to not\ninterfere with any HTML markup an HTML label might contain.",
            "hidden": false
        },
        "labelAttr": {
            "datatype": "string",
            "description": "The entries in the drop down list come from this attribute in the\ndojo.data items.\nIf not specified, the searchAttr attribute is used instead.",
            "hidden": false
        },
        "labelType": {
            "datatype": "string",
            "option": [
                {
                    "value": "text"
                },
                {
                    "value": "html"
                }
            ],
            "description": "Specifies how to interpret the labelAttr in the data store items.\nCan be \"html\" or \"text\".",
            "defaultValue": "text",
            "title": "Label Type"
        }
    },
    "content": "<div></div>",
    "title": {
        "type": "text/html",
        "value": "<p>Auto-completing text box\n</p>"
    },
    "description": {
        "type": "text/html",
        "value": "<p>The drop down box&#39;s values are populated from an class called\na data provider, which returns a list of values based on the characters\nthat the user has typed into the input box.\nIf OPTION tags are used as the data provider via markup,\nthen the OPTION tag&#39;s child text node is used as the widget value\nwhen selected.  The OPTION tag&#39;s value attribute is ignored.\nTo set the default value when using OPTION tags, specify the selected\nattribute on 1 of the child OPTION tags.\n\n</p>\n<p>Some of the options to the ComboBox are actually arguments to the data\nprovider.</p>"
    }
}