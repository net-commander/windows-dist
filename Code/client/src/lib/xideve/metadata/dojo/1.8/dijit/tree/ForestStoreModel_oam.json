{
    "id": "http://dojotoolkit.org/dijit/tree/ForestStoreModel",
    "name": "dijit.tree.ForestStoreModel",
    "spec": "1.0",
    "version": "1.0",
    "require": [
        {
            "type": "javascript-module",
            "format": "amd",
            "src": "dijit/Tree",
            "$library": "dojo"
        }
    ],
    "library": {
        "dojo": {
            "src": "../../../dojo/dojo.js"
        }
    },
    "property": {
        "jsId": {
            "datatype": "string",
            "title": "Model ID"
        },
        "store": {
            "datatype": "object",
            "title": "Data Store"
        },
        "childrenAttrs": {
            "datatype": "array",
            "defaultValue": "[\"children\"]",
            "title": "Children Attributes"
        },
        "query": {
            "datatype": "json",
            "title": "Query"
        },
        "rootId": {
            "datatype": "string",
            "defaultValue": "$root$",
            "title": "Root ID"
        },
        "rootLabel": {
            "datatype": "string",
            "defaultValue": "ROOT",
            "title": "Root Label"
        },
        "labelAttr": {
            "datatype": "string",
            "description": "If specified, get label for tree node from this attribute, rather\nthan by calling store.getLabel()",
            "hidden": false
        }
    },
    "content": "<span></span>",
    "title": {
        "type": "text/html",
        "value": "<p>Interface between a dijit.Tree and a dojo.data store that doesn&#39;t have a root item,\na.k.a. a store that has multiple &quot;top level&quot; items.\n</p>"
    },
    "description": {
        "type": "text/html",
        "value": "<p>Use this class to wrap a dojo.data store, making all the items matching the specified query\nappear as children of a fabricated &quot;root item&quot;.  If no query is specified then all the\nitems returned by fetch() on the underlying store become children of the root item.\nThis class allows dijit.Tree to assume a single root item, even if the store doesn&#39;t have one.\n\n</p>\n<p>When using this class the developer must override a number of methods according to their app and\ndata, including:\n\n</p>\n<ul>\n<li>onNewRootItem</li>\n<li>onAddToRoot</li>\n<li>onLeaveRoot</li>\n<li>onNewItem</li>\n<li>onSetItem</li>\n</ul>"
    }
}