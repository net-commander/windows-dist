{
    "id": "http://dojotoolkit.org/dojox/layout/GridContainer",
    "name": "dojox.layout.GridContainer",
    "spec": "1.0",
    "version": "1.0",
    "require": [
        {
            "type": "css",
            "src": "dojox/layout/resources/GridContainer.css",
            "$library": "dojo"
        },
        {
            "type": "css",
            "src": "dojox/layout/resources/DndGridContainer.css",
            "$library": "dojo"
        },
        {
            "type": "javascript-module",
            "format": "amd",
            "src": "dojox/layout/GridContainer",
            "$library": "dojo"
        }
    ],
    "library": {
        "dojo": {
            "src": "../../../dojo/dojo.js"
        }
    },
    "property": {
        "isAutoOrganized": {
            "datatype": "boolean",
            "title": "Is Auto-Organized"
        },
        "isRightFixed": {
            "datatype": "boolean",
            "title": "Is Right Fixed"
        },
        "isLeftFixed": {
            "datatype": "boolean",
            "title": "Is Left Fixed"
        },
        "hasResizableColumns": {
            "datatype": "boolean",
            "defaultValue": true,
            "title": "Has Resizable columns"
        },
        "nbZones": {
            "datatype": "string",
            "title": "Number of Drop Zones"
        },
        "opacity": {
            "datatype": "string",
            "title": "DnD Avatar Opacity"
        },
        "minColWidth": {
            "datatype": "string",
            "title": "Minimum Column Width (percent)"
        },
        "minChildWidth": {
            "datatype": "string",
            "title": "Minimum Child Width"
        },
        "mode": {
            "datatype": "string",
            "option": [
                {
                    "value": "left"
                },
                {
                    "value": "right"
                }
            ],
            "defaultValue": "right",
            "title": "Mode"
        },
        "allowAutoScroll": {
            "datatype": "boolean",
            "title": "Allow Auto Scroll"
        },
        "timeDisplayPopup": {
            "datatype": "string",
            "title": "Time to Display Popup (ms)"
        },
        "isOffset": {
            "datatype": "boolean",
            "title": "Is Offset"
        },
        "withHandles": {
            "datatype": "boolean",
            "title": "Specific Drag With Handles"
        },
        "executeScripts": {
            "datatype": "boolean",
            "defaultValue": true,
            "title": "Execute Scripts"
        },
        "scriptHasHooks": {
            "datatype": "boolean",
            "title": "Script Has Hooks"
        },
        "isContainer": {
            "datatype": "boolean",
            "description": "Just a flag indicating that this widget descends from dijit._Container",
            "hidden": true,
            "defaultValue": true
        },
        "acceptTypes": {
            "datatype": "array",
            "description": "The gridcontainer will only accept the children that fit to the types.\nIn order to do that, the child must have a widgetType or a dndType attribute corresponding to the accepted type.",
            "hidden": false
        },
        "offsetDrag": {
            "datatype": "object",
            "description": "Allow to specify its own offset (x and y) onl when Parameter isOffset is true",
            "hidden": true
        },
        "handleClasses": {
            "datatype": "array",
            "description": "Array of classes of nodes that will act as drag handles",
            "hidden": false
        }
    },
    "content": "<span></span>",
    "title": {
        "type": "text/html",
        "value": "<p>A grid containing any kind of objects and acting like web portals.\n</p>"
    },
    "description": {
        "type": "text/html",
        "value": "<p>This component inherits of all features of gridContainerLite plus :\n\n</p>\n<ul>\n<li>Resize colums</li>\n<li>Add / remove columns</li>\n<li>Fix columns at left or at right.</li>\n</ul>"
    },
    "examples": {
        "type": "text/html",
        "value": "<pre><code>&lt;div dojoType=&quot;dojox.layout.GridContainer&quot; nbZones=&quot;3&quot; isAutoOrganized=&quot;true&quot;&gt;\n    &lt;div dojoType=&quot;dijit.layout.ContentPane&quot;&gt;Content Pane 1 : Drag Me !&lt;/div&gt;\n    &lt;div dojoType=&quot;dijit.layout.ContentPane&quot;&gt;Content Pane 2 : Drag Me !&lt;/div&gt;\n    &lt;div dojoType=&quot;dijit.layout.ContentPane&quot;&gt;Content Pane 3 : Drag Me !&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n<pre><code>dojo.ready(function(){\n    var cpane1 = new dijit.layout.ContentPane({ title:&quot;cpane1&quot;, content: &quot;Content Pane 1 : Drag Me !&quot; }),\n        cpane2 = new dijit.layout.ContentPane({ title:&quot;cpane2&quot;, content: &quot;Content Pane 2 : Drag Me !&quot; }),\n        cpane3 = new dijit.layout.ContentPane({ title:&quot;cpane3&quot;, content: &quot;Content Pane 3 : Drag Me !&quot; });\n\n    var widget = new dojox.layout.GridContainer({\n        nbZones: 3,\n        isAutoOrganized: true\n    }, dojo.byId(&quot;idNode&quot;));\n    widget.addChild(cpane1, 0, 0);\n    widget.addChild(cpane2, 1, 0);\n    widget.addChild(cpane3, 2, 1);\n    widget.startup();\n});</code></pre>"
    }
}