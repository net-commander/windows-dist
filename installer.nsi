; NSIS packaging/install script
; Docs: http://nsis.sourceforge.net/Docs/Contents.html

!include LogicLib.nsh
!include nsDialogs.nsh
!include MUI.nsh

; --------------------------------
; Variables
; --------------------------------

!define dest "Y:\dist\installer\Control-Freak_1.0.1.exe"
!define src "Y:\dist\windows"
!define name "Control-Freak"
!define productName "Control-Freak"
!define author "Media-Merge"
!define version "1.0.1"
!define icon "Y:\dist\windows\icon.ico"
!define setupIcon "Y:\build\electron-template\resources\windows\setup-icon.ico"
!define banner "Y:\build\electron-template\resources\windows\setup-banner.bmp"

!define exec "Control-Freak.exe"

!define regkey "Software\${productName}"
!define uninstkey "Software\Microsoft\Windows\CurrentVersion\Uninstall\${productName}"

!define uninstaller "uninstall.exe"


; --------------------------------
; Installation
; --------------------------------

Unicode true
SetCompressor /SOLID lzma

Name "${productName}"
Icon "${setupIcon}"
OutFile "${dest}"
InstallDir "$PROGRAMFILES\${productName}"
InstallDirRegKey HKLM "${regkey}" ""

RequestExecutionLevel user
CRCCheck on
SilentInstall normal

XPStyle on
ShowInstDetails show
AutoCloseWindow false
WindowIcon off

Caption "${productName} Setup"
; Don't add sub-captions to title bar
SubCaption 3 " "
SubCaption 4 " "

#REM !define MUI_TEXT_DIRECTORY_TITLE "select"
#REM !define MUI_TEXT_DIRECTORY_SUBTITLE "sub"
#REM  !define MUI_TEMP2 "tem"


#!define MUI_DIRECTORYPAGE
!insertmacro MUI_PAGE_DIRECTORY

Page custom welcome

Page instfiles

Var Image
Var ImageHandle



#!insertmacro MUI_LANGUAGE "English"


Function .onInit

    ; Extract banner image for welcome page
    InitPluginsDir
    ReserveFile "${banner}"
    File /oname=$PLUGINSDIR\banner.bmp "${banner}"

FunctionEnd

; Custom welcome page
Function welcome

    nsDialogs::Create 1018

    ${NSD_CreateLabel} 185 1u 210 100% "Welcome to ${productName} version ${version} installer.$\r$\n$\r$\nClick install to begin."

    ${NSD_CreateBitmap} 0 0 170 210 ""
    Pop $Image
    ${NSD_SetImage} $Image $PLUGINSDIR\banner.bmp $ImageHandle

    nsDialogs::Show

    ${NSD_FreeImage} $ImageHandle

FunctionEnd

; Installation declarations
Section "Install"



    WriteRegStr HKLM "${regkey}" "Install_Dir" "$INSTDIR"
    WriteRegStr HKLM "${uninstkey}" "DisplayName" "${productName}"
    WriteRegStr HKLM "${uninstkey}" "DisplayIcon" '"$INSTDIR\icon.ico"'
    WriteRegStr HKLM "${uninstkey}" "UninstallString" '"$INSTDIR\${uninstaller}"'
    WriteRegStr HKLM "${uninstkey}" "Publisher" "${author}"
    WriteRegStr HKLM "${uninstkey}" "DisplayVersion" "${version}"

    ; Remove all application files copied by previous installation
    RMDir /r "$INSTDIR"

    SetOutPath $INSTDIR

    ; Include all files from /build directory
    File /r "${src}\*"

    ; Create start menu shortcut
    SetShellVarContext all

    CreateDirectory "$SMPROGRAMS\${productName}"
    CreateShortCut "$SMPROGRAMS\${productName}\${productName}.lnk" "$INSTDIR\${exec}" "" "$INSTDIR\icon.ico"
    CreateShortCut "$SMPROGRAMS\${productName}\Start Server.lnk" "$INSTDIR\start.bat" "" "$INSTDIR\icon.ico"
    ;CreateShortCut "$SMPROGRAMS\${productName}\Stop Server.lnk" "$INSTDIR\stop_server.bat" "" "$INSTDIR\icon.ico"
    ; Create desktop shortcut
    CreateShortCut "$DESKTOP\${productName}.lnk" "$INSTDIR\${exec}" "" "$INSTDIR\icon.ico"

    WriteUninstaller "${uninstaller}"

SectionEnd

; --------------------------------
; Uninstaller
; --------------------------------

ShowUninstDetails nevershow

UninstallCaption "Uninstall ${productName}"
UninstallText "Don't like ${productName} anymore? Hit uninstall button."
UninstallIcon "${icon}"

UninstPage custom un.confirm un.confirmOnLeave
UninstPage instfiles

Var RemoveAppDataCheckbox
Var RemoveAppDataCheckbox_State

; Custom uninstall confirm page
Function un.confirm

    nsDialogs::Create 1018

    ${NSD_CreateLabel} 1u 1u 100% 24u "If you really want to remove ${productName} from your computer press uninstall button."

    ${NSD_CreateCheckbox} 1u 35u 100% 10u "Remove also my ${productName} personal data"
    Pop $RemoveAppDataCheckbox

    nsDialogs::Show

FunctionEnd

Function un.confirmOnLeave

    ; Save checkbox state on page leave
    ${NSD_GetState} $RemoveAppDataCheckbox $RemoveAppDataCheckbox_State

FunctionEnd

; Uninstall declarations
Section "Uninstall"

    DeleteRegKey HKLM "${uninstkey}"
    DeleteRegKey HKLM "${regkey}"

    SetShellVarContext all
    Delete "$SMPROGRAMS\${productName}.lnk"
    ; Remove desktop shortcut
    Delete "$DESKTOP\${productName}.lnk"
    ; Remove whole directory from Program Files
    RMDir /r "$INSTDIR"

    ; Remove also appData directory generated by your app if user checked this option
    ${If} $RemoveAppDataCheckbox_State == ${BST_CHECKED}
        RMDir /r "$APPDATA\${productName}"
    ${EndIf}

SectionEnd
